// Add Prisma models for NextAuth (User, Account, Session, VerificationToken) and basic domain tables Area, Building, Listing, ListingMedia. Add useful indexes.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user") // user | agency | admin

  accounts Account[]
  sessions Session[]
  listings Listing[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// --- domain minim (extindem ziua 3) ---
model Area {
  id      String @id @default(cuid())
  city    String
  name    String
  slug    String @unique
  polygon Json?
  stats   Json?

  buildings Building[]

  @@index([city, slug])
}

model Building {
  id      String @id @default(cuid())
  areaId  String?
  address String
  geo     Json? // {lat, lng}

  area     Area?     @relation(fields: [areaId], references: [id])
  listings Listing[]

  @@index([areaId])
}

model Listing {
  id          String  @id @default(cuid())
  userId      String
  buildingId  String?
  type        String // apartment, house
  status      String  @default("draft") // draft|active|hidden|sold
  title       String?
  description String? @db.Text
  price       Int
  currency    String  @default("EUR")
  area_m2     Int
  rooms       Int
  floor       Int?
  year_built  Int?
  phone       String?
  source      String? // owner|agency|developer

  user     User           @relation(fields: [userId], references: [id])
  building Building?      @relation(fields: [buildingId], references: [id])
  media    ListingMedia[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([status, price])
  @@index([userId])
  @@index([buildingId])
}

model ListingMedia {
  id        String @id @default(cuid())
  listingId String
  url       String
  kind      String @default("image") // image|plan|video
  width     Int?
  height    Int?
  order     Int    @default(0)

  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@index([listingId])
}
