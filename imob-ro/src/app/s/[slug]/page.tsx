import Link from "next/link";

import { prisma } from "@/lib/db";

import { LeadForm } from "./lead";
import { ShareCTAs } from "./ShareCTAs";

export const revalidate = 0;

async function loadBySlug(slug: string) {
  const sl = await prisma.shortLink.findUnique({ where: { slug } });
  if (!sl?.analysisId) return null;

  const a = await prisma.analysis.findUnique({
    where: { id: sl.analysisId },
    include: { extractedListing: true, featureSnapshot: true, scoreSnapshot: true },
  });

  return { a, sl };
}

export default async function SharePage(props: { params: Promise<{ slug: string }> }) {
  const params = await props.params;
  const data = await loadBySlug(params.slug);

  if (!data?.a) {
    return (
      <div className="min-h-screen flex items-center justify-center p-6">
        <div className="text-center">
          <h1 className="text-2xl font-semibold mb-2">Link invalid sau expirat</h1>
          <p className="text-muted-foreground">Acest raport nu mai este disponibil.</p>
        </div>
      </div>
    );
  }

  const { a } = data;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const f: any = a.featureSnapshot?.features ?? {};
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const s: any = a.scoreSnapshot ?? {};
  const photos: string[] = Array.isArray(a.extractedListing?.photos)
    ? (a.extractedListing?.photos as string[])
    : [];

  // Log view (best-effort, non-blocking)
  await prisma.reportUsage
    .create({
      data: {
        userId: "",
        analysisId: a.id,
        action: "VIEW_SHARE",
        meta: { slug: params.slug },
      },
    })
    .catch(() => {});

  return (
    <div className="relative min-h-screen bg-background">
      {/* Watermark ribbon */}
      <div className="fixed top-3 right-3 bg-black/70 text-white text-xs px-3 py-1.5 rounded shadow-lg z-50">
        Generated by {process.env.PDF_BRAND_NAME || "ImobIntel"}
      </div>

      <div className="max-w-6xl mx-auto p-4 md:p-6 pb-12">
        {/* Header */}
        <header className="flex flex-col md:flex-row md:items-end md:justify-between gap-4 mb-6">
          <div className="flex-1">
            <h1 className="text-2xl md:text-3xl font-semibold line-clamp-2 mb-2">
              {a.extractedListing?.title ?? "Raport imobiliar"}
            </h1>
            <p className="text-sm text-muted-foreground">
              {a.extractedListing?.addressRaw || a.sourceUrl}
            </p>
          </div>
          <ShareCTAs analysisId={a.id} slug={params.slug} />
        </header>

        {/* Photo Gallery */}
        {photos.length > 0 && (
          <div className="grid grid-cols-2 md:grid-cols-3 gap-2 mb-6">
            {photos.slice(0, 6).map((src, i) => (
              <div key={i} className="relative aspect-[4/3] overflow-hidden rounded-lg border">
                {/* eslint-disable-next-line @next/next/no-img-element */}
                <img src={src} className="w-full h-full object-cover" alt="" />
              </div>
            ))}
          </div>
        )}

        {/* Summary Cards */}
        <div className="grid md:grid-cols-3 gap-4 mb-6">
          {/* AVM Price */}
          <div className="border rounded-xl p-4 bg-card">
            <div className="text-xs text-muted-foreground uppercase tracking-wide mb-1">
              Preț estimat
            </div>
            <div className="text-2xl font-semibold mb-1">
              {s.avmMid ? `${s.avmMid.toLocaleString("ro-RO")} €` : "—"}
            </div>
            {s.avmLow && s.avmHigh && (
              <div className="text-sm text-muted-foreground">
                Interval: {s.avmLow.toLocaleString("ro-RO")}–{s.avmHigh.toLocaleString("ro-RO")} €
              </div>
            )}
            <div className="text-xs mt-2">
              Încredere: {s.avmConf != null ? `${Math.round((s.avmConf || 0) * 100)}%` : "—"}
            </div>
          </div>

          {/* Time to Sell */}
          <div className="border rounded-xl p-4 bg-card">
            <div className="text-xs text-muted-foreground uppercase tracking-wide mb-1">
              Time to sell
            </div>
            <div className="text-2xl font-semibold mb-1">
              {s.ttsBucket ? `~${s.ttsBucket} zile` : "—"}
            </div>
            <div className="text-xs text-muted-foreground">Estimare bazată pe piață</div>
          </div>

          {/* Yield */}
          <div className="border rounded-xl p-4 bg-card">
            <div className="text-xs text-muted-foreground uppercase tracking-wide mb-1">
              Randament net
            </div>
            <div className="text-2xl font-semibold mb-1">
              {s.yieldNet != null ? `${(s.yieldNet * 100).toFixed(1)}%` : "—"}
            </div>
            {s.estRent && (
              <div className="text-sm text-muted-foreground">
                Chirie: {s.estRent.toLocaleString("ro-RO")} €/lună
              </div>
            )}
          </div>
        </div>

        {/* Property Details */}
        <div className="border rounded-xl p-4 bg-card mb-6">
          <div className="text-sm font-medium mb-3">Detalii proprietate</div>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
            <div>
              <div className="text-muted-foreground text-xs mb-1">Suprafață</div>
              <div className="font-medium">{f.areaM2 ? `${f.areaM2} m²` : "—"}</div>
            </div>
            <div>
              <div className="text-muted-foreground text-xs mb-1">Camere</div>
              <div className="font-medium">{f.rooms ?? "—"}</div>
            </div>
            <div>
              <div className="text-muted-foreground text-xs mb-1">Etaj</div>
              <div className="font-medium">{f.level ?? "—"}</div>
            </div>
            <div>
              <div className="text-muted-foreground text-xs mb-1">An construcție</div>
              <div className="font-medium">{f.yearBuilt ?? "—"}</div>
            </div>
            <div>
              <div className="text-muted-foreground text-xs mb-1">Distanță metrou</div>
              <div className="font-medium">
                {f.distMetroM != null ? `${Math.round(f.distMetroM)} m` : "—"}
              </div>
            </div>
            <div>
              <div className="text-muted-foreground text-xs mb-1">Risc seismic</div>
              <div className="font-medium">{s.riskClass ?? "—"}</div>
            </div>
          </div>
        </div>

        {/* Contact Form */}
        <div className="mb-8">
          <LeadForm analysisId={a.id} />
        </div>

        {/* Footer */}
        <div className="text-xs text-muted-foreground text-center border-t pt-4">
          Sursă anunț:{" "}
          {a.sourceUrl ? (
            <Link className="underline hover:text-foreground" href={a.sourceUrl} target="_blank">
              Vezi anunț original
            </Link>
          ) : (
            "—"
          )}
        </div>
      </div>
    </div>
  );
}
